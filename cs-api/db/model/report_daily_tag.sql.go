// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0
// source: report_daily_tag.sql

package model

import (
	"context"
	"time"
)

const listReportDailyTag = `-- name: ListReportDailyTag :many
select id, date, tag_id, count from report_daily_tag where date between ? and ?
`

type ListReportDailyTagParams struct {
	Date   time.Time `db:"date" json:"date"`
	Date_2 time.Time `db:"date_2" json:"date_2"`
}

func (q *Queries) ListReportDailyTag(ctx context.Context, arg ListReportDailyTagParams) ([]ReportDailyTag, error) {
	rows, err := q.query(ctx, q.listReportDailyTagStmt, listReportDailyTag, arg.Date, arg.Date_2)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []ReportDailyTag{}
	for rows.Next() {
		var i ReportDailyTag
		if err := rows.Scan(
			&i.ID,
			&i.Date,
			&i.TagID,
			&i.Count,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0
// source: seeder.sql

package model

import (
	"context"
)

const constantSeeder = `-- name: ConstantSeeder :exec
INSERT IGNORE INTO constant
(id, type, ` + "`" + `key` + "`" + `, value, created_at, created_by, updated_at, updated_by)
VALUES
    (1, 2, 'CsConfig', '{"max_member":20,"member_pending_expire":5,"greeting_text":"您好，很高興為您服務"}', now(), 0, now(), 0)
`

func (q *Queries) ConstantSeeder(ctx context.Context) error {
	_, err := q.exec(ctx, q.constantSeederStmt, constantSeeder)
	return err
}

const roleSeeder = `-- name: RoleSeeder :exec
INSERT IGNORE INTO role
(id, name, permissions, created_at, created_by, updated_at, updated_by)
VALUES
    (1, '超級管理員', '["*"]', now(), 0, now(), 0)
`

func (q *Queries) RoleSeeder(ctx context.Context) error {
	_, err := q.exec(ctx, q.roleSeederStmt, roleSeeder)
	return err
}

const staffSeeder = `-- name: StaffSeeder :exec
INSERT IGNORE INTO staff
(id, role_id, name, username, password, created_at, created_by, updated_at, updated_by)
VALUES
    (1, 1, '超級管理員', 'admin', ?, now(), 0, now(), 0)
`

func (q *Queries) StaffSeeder(ctx context.Context, password string) error {
	_, err := q.exec(ctx, q.staffSeederStmt, staffSeeder, password)
	return err
}

const tagSeeder = `-- name: TagSeeder :exec
INSERT
IGNORE INTO tag
(id, name, status, created_at, created_by, updated_at, updated_by)
VALUES
    (1, '其他', 1, now(), 0, now(), 0)
`

func (q *Queries) TagSeeder(ctx context.Context) error {
	_, err := q.exec(ctx, q.tagSeederStmt, tagSeeder)
	return err
}
